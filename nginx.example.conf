#rm /etc/nginx/conf.d/default.conf
#nginx -t -c ./nginx.conf
#cp nginx.conf /etc/nginx/nginx.conf

error_log               /var/log/nginx/error.log warn;
events {
    worker_connections  1024;
}
http {
    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;
    sendfile            on;
    keepalive_timeout   65;
    gzip                on;
    access_log          /var/log/nginx/access.log;

    upstream @back_hosts {
        server back:3001;
    }

    server {
        listen 80;
        root /usr/src/app/build;

        #security
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options "DENY";
        set $CSP "";
        set $CSP "${CSP} connect-src 'self';";
        set $CSP "${CSP} font-src 'self';";
        set $CSP "${CSP} frame-src 'self';";
        set $CSP "${CSP} img-src 'self';";
        set $CSP "${CSP} manifest-src 'self';";
        set $CSP "${CSP} media-src 'self';";
        set $CSP "${CSP} object-src 'self';";
        set $CSP "${CSP} style-src 'self';";
        set $CSP "${CSP} script-src 'self';";
        set $CSP "${CSP} worker-src 'self';";
        add_header Content-Security-Policy $CSP;

        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Accept-Encoding "";

        location /api {
            proxy_pass http://@back_hosts;
        }

        location @index {
            add_header Cache-Control no-cache;
            expires 0;
            try_files /index.html =404;
        }

        location / {
            gzip_static on;
            try_files $uri $uri/ @index;
        }
    }
}
